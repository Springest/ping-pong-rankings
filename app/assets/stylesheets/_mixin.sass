
// Clearfix
// --------

// For clearing floats like a boss h5bp.com/q
@mixin clearfix
  *zoom: 1
  &:before,
  &:after
    display: table
    content: ""
  &:after
    clear: both

.clearfix
  @include clearfix()

// Border Radius
@mixin border-radius($radius)
  -webkit-border-radius: $radius
  -moz-border-radius: $radius
  border-radius: $radius

// Drop shadows
@mixin box-shadow($shadow)
  -webkit-box-shadow: #{$shadow}
  -moz-box-shadow: #{$shadow}
  box-shadow: #{$shadow}

// Background gradient
@mixin gradient-vertical($startColor: #555, $endColor: #333)
  background-color: mix($startColor, $endColor, 60%)
  background-image: -moz-linear-gradient(top, $startColor, $endColor) // FF 3.6+
  background-image: -ms-linear-gradient(top, $startColor, $endColor) // IE10
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)) // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor) // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor) // Opera 11.10
  background-image: linear-gradient(top, $startColor, $endColor) // The standard
  background-repeat: repeat-x
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{darken($startColor, 1%)}', endColorstr='#{darken($endColor, 1%)}', GradientType=0) // IE9 and down


  // FORMS
// --------------------------------------------------

// Block level inputs
@mixin input-block-level
  display: block
  width: 100%
  // Make inputs at least the height of their button counterpart
  min-height: 30px
  // Makes inputs behave like true block-level elements
  @include box-sizing(border-box)

// Box sizing
@mixin box-sizing($boxmodel)
  -webkit-box-sizing: $boxmodel
  -moz-box-sizing: $boxmodel
  box-sizing: $boxmodel


// Mixin for form field states
@mixin formFieldState($textColor: #555, $borderColor: #ccc, $backgroundColor: #f5f5f5)
  // Set the text color
  > label,
  .help-block,
  .help-inline
    color: $textColor
  // Style inputs accordingly
  .checkbox,
  .radio,
  input,
  select,
  textarea
    color: $textColor
    border-color: $borderColor
    // Redeclare so transitions work
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075))
    &:focus
      border-color: darken($borderColor, 10%)
      box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten($borderColor, 20%)

  // Give a small background color for input-prepend/-append
  .input-prepend .add-on,
  .input-append .add-on
    color: $textColor
    background-color: $backgroundColor
    border-color: $textColor


// Grid System
// -----------

// Centered container element
@mixin container-fixed()
  margin-right: auto
  margin-left: auto
  @include clearfix()


// The Grid
@mixin grid-core($gridColumnWidth, $gridGutterWidth)
  .row
    margin-left: $gridGutterWidth * -1
    @include clearfix()

  [class*="span"]
    float: left
    margin-left: $gridGutterWidth

  // Set the container width, and override it for fixed navbars in media queries
  .container
    @include grid-core-span($gridColumns, $gridColumnWidth, $gridGutterWidth)

  // generate .spanX and .offsetX
  @include grid-core-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth)
  @include grid-core-offset-x($gridColumns, $gridColumnWidth, $gridGutterWidth)

@mixin grid-core-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth)
  @while $gridColumns > 0 
    .span#{$gridColumns}
      @include grid-core-span($gridColumns, $gridColumnWidth, $gridGutterWidth)
    $gridColumns: $gridColumns - 1

@mixin grid-core-offset-x($gridColumns, $gridColumnWidth, $gridGutterWidth)
  @while $gridColumns > 0
    .offset#{$gridColumns}
      @include grid-core-offset($gridColumns, $gridColumnWidth, $gridGutterWidth)
    $gridColumns: $gridColumns - 1

@mixin grid-core-span($columns, $gridColumnWidth, $gridGutterWidth)
  width: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns - 1))

@mixin grid-core-offset($columns, $gridColumnWidth, $gridGutterWidth)
  margin-left: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns + 1))

@mixin grid-input($gridColumnWidth, $gridGutterWidth)
  input,
  textarea,
  .uneditable-input
    // override margin-left from core grid system
    margin-left: 0

  // Space grid-sized controls properly if multiple per line
  .controls-row [class*="span"] + [class*="span"]
    margin-left: $gridGutterWidth

  // generate .spanX
  @include grid-input-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth)

@mixin grid-input-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth)
  @while $gridColumns > 0 
    input.span#{$gridColumns},
    textarea.span#{$gridColumns},
    .uneditable-input.span#{$gridColumns}
      @include grid-input-span($gridColumns, $gridColumnWidth, $gridGutterWidth)
    $gridColumns: $gridColumns - 1

@mixin grid-input-span($columns, $gridColumnWidth, $gridGutterWidth)
  width: (($gridColumnWidth) * $columns) + ($gridGutterWidth * ($columns - 1)) - 14

